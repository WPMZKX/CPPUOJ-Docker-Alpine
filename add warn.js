if(document.getElementsByClassName("section__title")[0].innerHTML.search(RegExp(/【C\/C\+\+组】/))!=-1){document.getElementsByClassName("section__title")[0].innerHTML+="<blockquote class=\"warn\"><p>对 C/C++ 选手的特别提醒：</p><ul><li>1. __int64 在 GNU C++ 中应写成 long long 类型</li><li>2. main() 返回值必须定义为 int ，而不是 void</li><li>3. for 语句中的指标变量 i 将会在如\"for (int i = 0...) {...}\"语句之后变为无效</li><li>4. itoa 不是一个通用 ANSI 函数（标准 C/C++ 中无此函数）</li><li>5. printf 中使用 %lf 格式是不正确的</li></ul></blockquote>";}
if(document.getElementsByClassName("section__title")[0].innerHTML.search(RegExp(/【Python组】/))!=-1){document.getElementsByClassName("section__title")[0].innerHTML+="<blockquote class=\"warn\"><p>由于 Python2 从 2020 年开始已不再维护，故 CPPU OJ 已经移除了对 Python2 的支持，所有 Python 选手应使用 Python3 作为提交时选择的语言。</p><p>对 Python 选手的特别提醒：</p><ul><li>1. Python3 在不等于的写法上去除了 <> ，全部改用 !=</li><li>2. 除法运算 / 在 Python2 中返回的是整型数，在 Python3 中返回的是浮点数。在 Python3 中除法返回整型数应使用 //</li><li>3. Python3 中加入了 nonlocal 声明。使用 noclocal x 可以声明该函数上部层级中的变量</li><li>4. Python3 中去除了 print 和 exec 语句，分别用 print() 函数和 exec() 替代使用</li><li>5. Python3 中输入函数改变了（读取键盘输入的方法）。 Python2 中 raw_input() 函数返回字符串类型、 input() 函数只能用于输入数字； Python3 中对两个函数进行了整合，去掉了 raw_input() 函数， input() 函数对所有输入都会返回字符串类型</li><li>6. Python3 中加入了关键词 as 和 with</li><li>7. Python3 中增加了 f'{}' 格式化，在 Python2 中无此功能</li><li>8. Python3 去除了 long 长整型类型，只保留 int 整型类型</li><li>9. Python3 中 str 表示字符串序列， byte 表示字节序列； Python2 中 Unicode 表示字符串序列， str 表示字节序列</li><li>10. Python3 中字典类型应使用 .keys() 、 .items 和 .values() 方法返回迭代器，而 Python2 的 iterkeys() 等方法都已废弃； Python3 中应使用 in 替代 Python2 中的 has_key()</li><li>11. range() 函数在 Python2 中返回一个列表，在Python3中返回的是一个迭代器</li></ul></blockquote>";}
if(UiContext['problemId']!=null){if(UiContext['problemId'].search(RegExp(/cpp$/))!=-1){document.getElementsByClassName("section__title")[0].innerHTML+="<blockquote class=\"warn\"><p>对 C/C++ 选手的特别提醒：</p><ul><li>1. __int64 在 GNU C++ 中应写成 long long 类型</li><li>2. main() 返回值必须定义为 int ，而不是 void</li><li>3. for 语句中的指标变量 i 将会在如\"for (int i = 0...) {...}\"语句之后变为无效</li><li>4. itoa 不是一个通用 ANSI 函数（标准 C/C++ 中无此函数）</li><li>5. printf 中使用 %lf 格式是不正确的</li></ul></blockquote>";}}
if(UiContext['problemId']!=null){if(UiContext['problemId'].search(RegExp(/py$/))!=-1){document.getElementsByClassName("section__title")[0].innerHTML+="<blockquote class=\"warn\"><p>由于 Python2 从 2020 年开始已不再维护，故 CPPU OJ 已经移除了对 Python2 的支持，所有 Python 选手应使用 Python3 作为提交时选择的语言。</p><p>对 Python 选手的特别提醒：</p><ul><li>1. Python3 在不等于的写法上去除了 <> ，全部改用 !=</li><li>2. 除法运算 / 在 Python2 中返回的是整型数，在 Python3 中返回的是浮点数。在 Python3 中除法返回整型数应使用 //</li><li>3. Python3 中加入了 nonlocal 声明。使用 noclocal x 可以声明该函数上部层级中的变量</li><li>4. Python3 中去除了 print 和 exec 语句，分别用 print() 函数和 exec() 替代使用</li><li>5. Python3 中输入函数改变了（读取键盘输入的方法）。 Python2 中 raw_input() 函数返回字符串类型、 input() 函数只能用于输入数字； Python3 中对两个函数进行了整合，去掉了 raw_input() 函数， input() 函数对所有输入都会返回字符串类型</li><li>6. Python3 中加入了关键词 as 和 with</li><li>7. Python3 中增加了 f'{}' 格式化，在 Python2 中无此功能</li><li>8. Python3 去除了 long 长整型类型，只保留 int 整型类型</li><li>9. Python3 中 str 表示字符串序列， byte 表示字节序列； Python2 中 Unicode 表示字符串序列， str 表示字节序列</li><li>10. Python3 中字典类型应使用 .keys() 、 .items 和 .values() 方法返回迭代器，而 Python2 的 iterkeys() 等方法都已废弃； Python3 中应使用 in 替代 Python2 中的 has_key()</li><li>11. range() 函数在 Python2 中返回一个列表，在Python3中返回的是一个迭代器</li></ul></blockquote>";}}
